/*
 AngularJS v1.3.0
 (c) 2010-2014 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(window,angular,undefined){function $RouteProvider(){function inherit(parent,extra){return angular.extend(new (angular.extend(function(){},{prototype:parent})),extra)}function pathRegExp(path,opts){var insensitive=opts.caseInsensitiveMatch;var ret={originalPath:path,regexp:path};var keys=ret.keys=[];path=path.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)([\?\*])?/g,function(_,slash,key,option){var optional=option==="?"?option:null;var star=option==="*"?option:null;keys.push({name:key,optional:!!optional});
slash=slash||"";return""+(optional?"":slash)+"(?:"+(optional?slash:"")+(star&&"(.+?)"||"([^/]+)")+(optional||"")+")"+(optional||"")}).replace(/([\/$\*])/g,"\\$1");ret.regexp=new RegExp("^"+path+"$",insensitive?"i":"");return ret}var routes={};this.when=function(path,route){routes[path]=angular.extend({reloadOnSearch:true},route,path&&pathRegExp(path,route));if(path){var redirectPath=path[path.length-1]=="/"?path.substr(0,path.length-1):path+"/";routes[redirectPath]=angular.extend({redirectTo:path},
pathRegExp(redirectPath,route))}return this};this.otherwise=function(params){if(typeof params==="string")params={redirectTo:params};this.when(null,params);return this};this.$get=["$rootScope","$location","$routeParams","$q","$injector","$templateRequest","$sce",function($rootScope,$location,$routeParams,$q,$injector,$templateRequest,$sce){function switchRouteMatcher(on,route){var keys=route.keys;var params={};if(!route.regexp)return null;var m=route.regexp.exec(on);if(!m)return null;var i=1;for(var len=
m.length;i<len;++i){var key=keys[i-1];var val=m[i];if(key&&val)params[key.name]=val}return params}function prepareRoute($locationEvent){var lastRoute=$route.current;preparedRoute=parseRoute();preparedRouteIsUpdateOnly=preparedRoute&&lastRoute&&preparedRoute.$$route===lastRoute.$$route&&angular.equals(preparedRoute.pathParams,lastRoute.pathParams)&&!preparedRoute.reloadOnSearch&&!forceReload;if(!preparedRouteIsUpdateOnly&&(lastRoute||preparedRoute))if($rootScope.$broadcast("$routeChangeStart",preparedRoute,
lastRoute).defaultPrevented)if($locationEvent)$locationEvent.preventDefault()}function commitRoute(){var lastRoute=$route.current;var nextRoute=preparedRoute;if(preparedRouteIsUpdateOnly){lastRoute.params=nextRoute.params;angular.copy(lastRoute.params,$routeParams);$rootScope.$broadcast("$routeUpdate",lastRoute)}else if(nextRoute||lastRoute){forceReload=false;$route.current=nextRoute;if(nextRoute)if(nextRoute.redirectTo)if(angular.isString(nextRoute.redirectTo))$location.path(interpolate(nextRoute.redirectTo,
nextRoute.params)).search(nextRoute.params).replace();else $location.url(nextRoute.redirectTo(nextRoute.pathParams,$location.path(),$location.search())).replace();$q.when(nextRoute).then(function(){if(nextRoute){var locals=angular.extend({},nextRoute.resolve);var template;var templateUrl;angular.forEach(locals,function(value,key){locals[key]=angular.isString(value)?$injector.get(value):$injector.invoke(value,null,null,key)});if(angular.isDefined(template=nextRoute.template)){if(angular.isFunction(template))template=
template(nextRoute.params)}else if(angular.isDefined(templateUrl=nextRoute.templateUrl)){if(angular.isFunction(templateUrl))templateUrl=templateUrl(nextRoute.params);templateUrl=$sce.getTrustedResourceUrl(templateUrl);if(angular.isDefined(templateUrl)){nextRoute.loadedTemplateUrl=templateUrl;template=$templateRequest(templateUrl)}}if(angular.isDefined(template))locals["$template"]=template;return $q.all(locals)}}).then(function(locals){if(nextRoute==$route.current){if(nextRoute){nextRoute.locals=
locals;angular.copy(nextRoute.params,$routeParams)}$rootScope.$broadcast("$routeChangeSuccess",nextRoute,lastRoute)}},function(error){if(nextRoute==$route.current)$rootScope.$broadcast("$routeChangeError",nextRoute,lastRoute,error)})}}function parseRoute(){var params;var match;angular.forEach(routes,function(route,path){if(!match&&(params=switchRouteMatcher($location.path(),route))){match=inherit(route,{params:angular.extend({},$location.search(),params),pathParams:params});match.$$route=route}});
return match||routes[null]&&inherit(routes[null],{params:{},pathParams:{}})}function interpolate(string,params){var result=[];angular.forEach((string||"").split(":"),function(segment,i){if(i===0)result.push(segment);else{var segmentMatch=segment.match(/(\w+)(.*)/);var key=segmentMatch[1];result.push(params[key]);result.push(segmentMatch[2]||"");delete params[key]}});return result.join("")}var forceReload=false;var preparedRoute;var preparedRouteIsUpdateOnly;var $route={routes:routes,reload:function(){forceReload=
true;$rootScope.$evalAsync(function(){prepareRoute();commitRoute()})},updateParams:function(newParams){if(this.current&&this.current.$$route){var searchParams={};var self=this;angular.forEach(Object.keys(newParams),function(key){if(!self.current.pathParams[key])searchParams[key]=newParams[key]});newParams=angular.extend({},this.current.params,newParams);$location.path(interpolate(this.current.$$route.originalPath,newParams));$location.search(angular.extend({},$location.search(),searchParams))}else throw $routeMinErr("norout",
"Tried updating route when with no current route");}};$rootScope.$on("$locationChangeStart",prepareRoute);$rootScope.$on("$locationChangeSuccess",commitRoute);return $route}]}function $RouteParamsProvider(){this.$get=function(){return{}}}function ngViewFactory($route,$anchorScroll,$animate){return{restrict:"ECA",terminal:true,priority:400,transclude:"element",link:function(scope,$element,attr,ctrl,$transclude){function cleanupLastView(){if(previousLeaveAnimation){$animate.cancel(previousLeaveAnimation);
previousLeaveAnimation=null}if(currentScope){currentScope.$destroy();currentScope=null}if(currentElement){previousLeaveAnimation=$animate.leave(currentElement);previousLeaveAnimation.then(function(){previousLeaveAnimation=null});currentElement=null}}function update(){var locals=$route.current&&$route.current.locals;var template=locals&&locals.$template;if(angular.isDefined(template)){var newScope=scope.$new();var current=$route.current;var clone=$transclude(newScope,function(clone){$animate.enter(clone,
null,currentElement||$element).then(function onNgViewEnter(){if(angular.isDefined(autoScrollExp)&&(!autoScrollExp||scope.$eval(autoScrollExp)))$anchorScroll()});cleanupLastView()});currentElement=clone;currentScope=current.scope=newScope;currentScope.$emit("$viewContentLoaded");currentScope.$eval(onloadExp)}else cleanupLastView()}var currentScope;var currentElement;var previousLeaveAnimation;var autoScrollExp=attr.autoscroll;var onloadExp=attr.onload||"";scope.$on("$routeChangeSuccess",update);update()}}}
function ngViewFillContentFactory($compile,$controller,$route){return{restrict:"ECA",priority:-400,link:function(scope,$element){var current=$route.current;var locals=current.locals;$element.html(locals.$template);var link=$compile($element.contents());if(current.controller){locals.$scope=scope;var controller=$controller(current.controller,locals);if(current.controllerAs)scope[current.controllerAs]=controller;$element.data("$ngControllerController",controller);$element.children().data("$ngControllerController",
controller)}link(scope)}}}var ngRouteModule=angular.module("ngRoute",["ng"]).provider("$route",$RouteProvider);var $routeMinErr=angular.$$minErr("ngRoute");ngRouteModule.provider("$routeParams",$RouteParamsProvider);ngRouteModule.directive("ngView",ngViewFactory);ngRouteModule.directive("ngView",ngViewFillContentFactory);ngViewFactory.$inject=["$route","$anchorScroll","$animate"];ngViewFillContentFactory.$inject=["$compile","$controller","$route"]})(window,window.angular);